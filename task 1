#include <iostream>
#include <vector>
using namespace std;

// Structure to hold a quiz question
struct Question {
    string questionText;
    vector<string> options;
    char correctOption;
};

// Function to ask questions and evaluate answers
int playQuiz(const vector<Question>& questions) {
    int score = 0;

    for (int i = 0; i < questions.size(); i++) {
        cout << "Question " << i + 1 << ": " << questions[i].questionText << endl;
        for (int j = 0; j < questions[i].options.size(); j++) {
            cout << char('A' + j) << ". " << questions[i].options[j] << endl;
        }

        char userAnswer;
        cout << "Your answer (A/B/C/D): ";
        cin >> userAnswer;
        userAnswer = toupper(userAnswer);

        if (userAnswer == questions[i].correctOption) {
            cout << "Correct!" << endl;
            score++;
        } else {
            cout << "Wrong! The correct answer was: " 
                 << questions[i].correctOption << endl;
        }
        cout << endl;
    }
    return score;
}

// Main function
int main() {
    vector<Question> questions = {
        {"What is the capital of Germany?", {"Berlin", "Paris", "Madrid", "Rome"}, 'A'},
        {"Which planet is known as the Red Planet?", {"Earth", "Mars", "Jupiter", "Venus"}, 'B'},
        {"Who wrote 'Romeo and Juliet'?", {"Shakespeare", "Hemingway", "Orwell", "Dickens"}, 'A'},
        {"What is 5 + 3?", {"6", "7", "8", "9"}, 'C'},
    };

    cout << "Welcome to the Quiz Game!" << endl;
    cout << "Answer the questions by choosing the correct option (A, B, C, or D)." << endl << endl;

    int score = playQuiz(questions);

    cout << "Quiz Over!" << endl;
    cout << "Your final score: " << score << "/" << questions.size() << endl;

    if (score == questions.size()) {
        cout << "Excellent! You're a quiz master!" << endl;
    } else if (score >= questions.size() / 2) {
        cout << "Good job! Keep practicing!" << endl;
    } else {
        cout << "Better luck next time. Keep learning!" << endl;
    }

    return 0;
}
